<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Talk To The Duck</title><link>/en/</link><description>Recent content on Talk To The Duck</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2021-{year} Talk To The Duck. All Rights Reserved.</copyright><lastBuildDate>Mon, 16 Jan 2023 21:19:04 +0100</lastBuildDate><atom:link href="/en/index.xml" rel="self" type="application/rss+xml"/><item><title>What Is Code Formatting and Why Does It Matter</title><link>/en/posts/what-is-code-formatting-and-why-does-it-matter/</link><pubDate>Mon, 16 Jan 2023 21:19:04 +0100</pubDate><guid>/en/posts/what-is-code-formatting-and-why-does-it-matter/</guid><description>&lt;p>Can an AutoFormat Tool Increase Productivity?&lt;/p>
&lt;p>The answer is yes.&lt;/p>
&lt;p>The book “The Pragmatic Programmer” talks about the entropy of the code. Entropy is a physical quantity linked to molecular disorder. This is perhaps the only physical quantity that we can find in software. The larger the disorder, the higher the entropy. The more entropic your software is, the harder it will be to work with it day by day.&lt;/p>
&lt;p>To explain why, I&amp;rsquo;ll give you an example.&lt;/p></description></item><item><title>How to evolve an application to make it more robust and maintainable - Presentation</title><link>/en/posts/how-to-evolve-application-presentation/</link><pubDate>Sun, 15 Jan 2023 21:13:37 +0100</pubDate><guid>/en/posts/how-to-evolve-application-presentation/</guid><description/></item><item><title>How to evolve an application to make it more robust and maintainable - Setting up the test</title><link>/en/posts/how-to-evolve-application-tests/</link><pubDate>Mon, 09 Jan 2023 21:54:28 +0100</pubDate><guid>/en/posts/how-to-evolve-application-tests/</guid><description/></item><item><title>About</title><link>/en/about/</link><pubDate>Thu, 13 Jan 2022 20:21:32 +0100</pubDate><guid>/en/about/</guid><description>Have you ever gotten stuck while writing a particularly complicated piece of code and figured out what was wrong at the exact moment you asked a colleague for help?
Explain your code to a duck (if it&amp;rsquo;s made of rubber, it will always remain handy on your desk) and your ideas will catch on quickly.
It may seem strange but if instead of reading the code over and over, you tell someone about it, your brain often reveals the mystery.</description></item><item><title>Offline</title><link>/en/offline/</link><pubDate>Tue, 04 Jan 2022 18:19:16 +0100</pubDate><guid>/en/offline/</guid><description/></item><item><title/><link>/en/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/en/contact/</guid><description>render = never
+++ title = &amp;ldquo;Contact Us&amp;rdquo; layout = &amp;ldquo;contact&amp;rdquo; [menu.footer] parent = &amp;ldquo;support&amp;rdquo; weight = 6 pre = &amp;lsquo;&amp;rsquo; +++</description></item><item><title/><link>/en/faq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/en/faq/</guid><description>render = never
+++ title = &amp;ldquo;FAQs&amp;rdquo; description = &amp;ldquo;Frequently Asked Questions&amp;rdquo; layout = &amp;ldquo;faq&amp;rdquo; [menu.main] parent = &amp;ldquo;support&amp;rdquo; weight = 6 [menu.footer] parent = &amp;ldquo;support&amp;rdquo; weight = 6 pre = &amp;lsquo;&amp;rsquo; +++</description></item></channel></rss>